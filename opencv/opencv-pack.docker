FROM ubuntu:xenial as base-ubuntu

## notes:
## Generate a package for installing. Uses static links to generate a file
## which can be used to install OpenCV with zero dependencies
## ./OpenCV-install.sh --exclude-subdir --skip-license
## libtiff-dev installs libjpeg

RUN apt-get update -qq && apt-get install -qq \
        curl \
    && apt-get install -qq --no-install-recommends \
        build-essential \
        cmake \
        git \
        pkg-config \
        ssh \
        unzip \
        gfortran \
        libatlas-base-dev \
        libboost-all-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        libhdf5-serial-dev \
        libjasper-dev \
        libleveldb-dev \
        liblmdb-dev \
        libprotobuf-dev \
        libtiff5-dev=4.0.6* \
        libpng12-dev=1.2.54* \
        libsnappy-dev \
        protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*


RUN apt-get update -qq && apt-get install -y \
        python-dev \
    && rm -rf /var/lib/apt/lists/*

RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
    && python2 get-pip.py

RUN pip2 install \
        numpy==1.16 \
        scipy==1.2

ARG OPENCV_VERSION=3.3.1
ENV OPENCV_VERSION=$OPENCV_VERSION \
    OPENCV_INSTALL_DIR=/root/opencv

## =========================  opencv  =====================================
FROM base-ubuntu as opencv

# Get opencv source
WORKDIR /root/opencv-source
ADD "https://github.com/opencv/opencv/archive/$OPENCV_VERSION.tar.gz" .

# Build opencv
RUN tar xf ${OPENCV_VERSION}.tar.gz \
    && rm ${OPENCV_VERSION}.tar.gz\
    && mv opencv-${OPENCV_VERSION} opencv \
    && mkdir -p opencv/build \
    && cd opencv/build \
    && cmake \
        -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/root/opencv \
        -D BUILD_PYTHON_SUPPORT=ON \
        -D WITH_XINE=ON \
        -D WITH_TBB=ON \
        -D WITH_PNG=ON \
        -D WITH_TIFF=ON \
        -D WITH_CUDA=OFF \
        -D WITH_QT=OFF \
        -D WITH_GTK=OFF\
        -D CPACK_BINARY_DEB:BOOL=ON \
        -D BUILD_SHARED_LIBS=ON \
        .. \
    && cmake --build . -- -j"$((`nproc`<2?1:$((`nproc`-1))))"

RUN cd opencv/build &&\
    cmake --build . --target package -- -j"$((`nproc`<2?1:$((`nproc`-1))))"
