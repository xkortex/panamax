ARG OS_BASE=ubuntu
ARG OS_VERS=xenial
FROM xkortex/${OS_BASE}:${OS_VERS}-pysci as base

## notes:
## libtiff-dev installs libjpeg

RUN apt-get update -qq && apt-get install -qq \
        curl \
    && apt-get install -qq --no-install-recommends \
        build-essential \
        cmake \
        git \
        pkg-config \
        ssh \
        unzip \
        gfortran \
        libatlas-base-dev \
        libboost-all-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        libhdf5-serial-dev \
        libjasper-dev \
        libleveldb-dev \
        liblmdb-dev \
        libprotobuf-dev \
        libtiff5-dev=4.0.6* \
        libpng12-dev=1.2.54* \
        libsnappy-dev \
        protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*



## =========================  opencv  =====================================
FROM base as opencv

ARG OPENCV_VERSION=3.3.1
ENV OPENCV_VERSION=$OPENCV_VERSION \
    OPENCV_INSTALL_DIR=/root/opencv

# Get opencv source
WORKDIR /root/opencv-source
ADD "https://github.com/opencv/opencv/archive/$OPENCV_VERSION.tar.gz" .

# Build opencv
RUN tar xf "$OPENCV_VERSION.tar.gz" \
    && rm "$OPENCV_VERSION.tar.gz" \
    && mkdir -p "opencv-$OPENCV_VERSION/release" \
    && cd "opencv-$OPENCV_VERSION/release" \
    && cmake \
        -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D BUILD_PYTHON_SUPPORT=ON \
        -D WITH_XINE=ON \
        -D WITH_TBB=ON \
        -D WITH_PNG=ON \
        -D WITH_TIFF=ON \
        -D WITH_CUDA=OFF \
        -D WITH_QT=OFF \
        -D WITH_GTK=OFF\
        .. &&\
    cmake --build . --target install -- -j"$(nproc)"
